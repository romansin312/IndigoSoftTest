// <auto-generated />
using System;
using IndigoSoftTest.BusinessLogic.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace IndigoSoftTest.BusinessLogic.Migrations
{
    [DbContext(typeof(IndigoSoftTestDbContext))]
    [Migration("20250430062419_InitMigration")]
    partial class InitMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("IndigoSoftTest.BusinessLogic.Entities.IpAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IpAddressVersion")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Ip");

                    b.ToTable("IpAddresses");
                });

            modelBuilder.Entity("IndigoSoftTest.BusinessLogic.Entities.User", b =>
                {
                    b.Property<decimal>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("UserId");

                    b.HasIndex("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("IndigoSoftTest.BusinessLogic.Entities.UserIp", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ConnectionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("IpAddressId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("UserId")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Id");

                    b.HasIndex("IpAddressId");

                    b.HasIndex("UserId");

                    b.ToTable("UserIps");
                });

            modelBuilder.Entity("IndigoSoftTest.BusinessLogic.Entities.UserIp", b =>
                {
                    b.HasOne("IndigoSoftTest.BusinessLogic.Entities.IpAddress", "IpAddress")
                        .WithMany("UserIps")
                        .HasForeignKey("IpAddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IndigoSoftTest.BusinessLogic.Entities.User", "User")
                        .WithMany("UserIps")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IpAddress");

                    b.Navigation("User");
                });

            modelBuilder.Entity("IndigoSoftTest.BusinessLogic.Entities.IpAddress", b =>
                {
                    b.Navigation("UserIps");
                });

            modelBuilder.Entity("IndigoSoftTest.BusinessLogic.Entities.User", b =>
                {
                    b.Navigation("UserIps");
                });
#pragma warning restore 612, 618
        }
    }
}
